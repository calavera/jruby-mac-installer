#!/bin/sh

echo "This script will update your shell profile when the 'bin' directory"
echo "of jruby is not early enough of the PATH of your shell."
echo "These changes will be effective only in shell windows that you open"
echo "after running this script."

JRUBYVER="<%= JVERSION %>"
JRUBY_ROOT="/Library/Frameworks/JRuby.framework/Versions"

JRUBY_VERSION_PATH="$JRUBY_ROOT/$JRUBYVER"
JRUBY_CURRENT_PATH="$JRUBY_ROOT/Current"

if [ -f $JRUBY_CURRENT_PATH ]
then
    rm $JRUBY_CURRENT_PATH
fi

# create symlink to the current directory
ln -s $JRUBY_VERSION_PATH $JRUBY_CURRENT_PATH

# install native launcher
$JRUBY_VERSION_PATH/bin/jruby -S gem install jruby-launcher --no-ri --no-rdoc > /tmp/jruby_installer.log 2> /tmp/jruby_installer.err

# check if a previous verison of JRuby exists. Perhaps it's less safe but
# it's also less hacky and if the user changes his path we keep his choice
INSTALLED_VERSIONS=`ls $JRUBY_ROOT | wc -l`
if [ $INSTALLED_VERSIONS -gt 2 ]
then
    echo "Seems JRuby was previously installed, skipping path modification" >> /tmp/jruby.installer.log
    exit 0
fi

check_previous_patch() {
    if grep -q 'Setting PATH for JRuby' "$1"
        then exit 0
    fi
}

# add current directory to the user's profile
echo "${JRUBY_CURRENT_PATH}/bin is not on your PATH" 
if [ `id -ur` = 0 ]; then
    # Run from the installer, do some trickery to fetch the information
    # we need.
    theShell="`finger $USER | grep Shell: | head  -1 | awk '{ print $NF }'`"
else
    theShell="${SHELL}"
fi

BSH="`basename "${theShell}"`"
case "${BSH}" in
*csh)
	if [ -f "${HOME}/.tcshrc" ]; then
		RC="${HOME}/.tcshrc"
	else
		RC="${HOME}/.cshrc"
	fi
    #check previous patches
    check_previous_patch ${RC}

	# Create backup copy before patching
	if [ -f "${RC}" ]; then
		cp -fp "${RC}" "${RC}.jrubysave"
	fi
	echo "" >> "${RC}"
	echo "# Setting PATH for JRuby ${JRUBYVER}" >> "${RC}"
	echo "# The orginal version is saved in .cshrc.jrubysave" >> "${RC}"
	echo "set path=(${JRUBY_CURRENT_PATH}/bin "'$path'")" >> "${RC}"
	if [ `id -ur` = 0 ]; then
		chown "${USER}" "${RC}"
	fi
	exit 0
	;;
bash)
	if [ -e "${HOME}/.bash_profile" ]; then
		PR="${HOME}/.bash_profile"
	elif [ -e "${HOME}/.bash_login" ]; then
		PR="${HOME}/.bash_login"
	elif [ -e "${HOME}/.profile" ]; then
		PR="${HOME}/.profile"
	else
		PR="${HOME}/.bash_profile"
	fi
	;;
*sh)
	PR="${HOME}/.profile"
	;;
esac

#check previous patches
check_previous_patch $PR

# Create backup copy before patching
if [ -f "${PR}" ]; then
	cp -fp "${PR}" "${PR}.jrubysave"
fi
echo "" >> "${PR}"
echo "# Setting PATH for JRuby ${JRUBYVER}" >> "${PR}"
echo "# The orginal version is saved in `basename ${PR}`.jrubysave" >> "${PR}"
echo 'PATH="${PATH}:'"${JRUBY_CURRENT_PATH}/bin"'"' >> "${PR}"
echo 'export PATH' >> "${PR}"
if [ `id -ur` = 0 ]; then
	chown "${USER}" "${PR}"
fi
exit 0
