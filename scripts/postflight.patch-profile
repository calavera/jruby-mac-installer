#!/bin/sh

echo "This script will update your shell profile when the 'bin' directory"
echo "of jruby is not early enough of the PATH of your shell."
echo "These changes will be effective only in shell windows that you open"
echo "after running this script."

JRUBYVER="@JRUBYVER@"
JRUBY_ROOT="/Library/Frameworks/JRuby.framework/Versions"

JRUBY_VERSION_PATH="$JRUBY_ROOT/$JRUBYVER"
JRUBY_CURRENT_PATH="$JRUBY_ROOT/Current"

if [ -f $JRUBY_CURRENT_PATH ]
then
    rm $JRUBY_CURRENT_PATH
fi

ln -s $JRUBY_VERSION_PATH $JRUBY_CURRENT_PATH

$JRUBY_VERSION_PATH/bin/jruby -S gem install jruby-launcher --no-ri --no-rdoc > /tmp/jruby_installer.log 2> /tmp/jruby_installer.err

if [ `id -ur` = 0 ]; then
    # Run from the installer, do some trickery to fetch the information
    # we need.
    theShell="`finger $USER | grep Shell: | head  -1 | awk '{ print $NF }'`"

else
    theShell="${SHELL}"
fi

# Make sure the directory ${JRUBY_CURRENT_PATH}/bin is on the users PATH.
BSH="`basename "${theShell}"`"
case "${BSH}" in
bash|ksh|sh|*csh)
    if [ `id -ur` = 0 ]; then
        P=`su - ${USER} -c 'echo A-X-4-X@@$PATH@@X-4-X-A' | grep 'A-X-4-X@@.*@@X-4-X-A' | sed -e 's/^A-X-4-X@@//g' -e 's/@@X-4-X-A$//g'`
    else
        P="`(exec -l ${theShell} -c 'echo $PATH')`"
    fi
    ;;
*)
    echo "Sorry, I don't know how to patch $BSH shells"
    exit 0
    ;;
esac

# Now ensure that our bin directory is on $JRUBY_CURRENT_PATH and before /usr/bin at that
for elem in `echo $P | tr ':' ' '`
do
    if [ "${elem}" = "${JRUBY_CURRENT_PATH}/bin" ]; then
        echo "All right, you're a jruby lover already"
        exit 0
    fi
done

echo "${JRUBY_CURRENT_PATH}/bin is not on your PATH or at least not early enough"
case "${BSH}" in
*csh)
	if [ -f "${HOME}/.tcshrc" ]; then
		RC="${HOME}/.tcshrc"
	else
		RC="${HOME}/.cshrc"
	fi
	# Create backup copy before patching
	if [ -f "${RC}" ]; then
		cp -fp "${RC}" "${RC}.jrubysave"
	fi
	echo "" >> "${RC}"
	echo "# Setting PATH for JRuby ${JRUBYVER}" >> "${RC}"
	echo "# The orginal version is saved in .cshrc.jrubysave" >> "${RC}"
	echo "set path=(${JRUBY_CURRENT_PATH}/bin "'$path'")" >> "${RC}"
	if [ `id -ur` = 0 ]; then
		chown "${USER}" "${RC}"
	fi
	exit 0
	;;
bash)
	if [ -e "${HOME}/.bash_profile" ]; then
		PR="${HOME}/.bash_profile"
	elif [ -e "${HOME}/.bash_login" ]; then
		PR="${HOME}/.bash_login"
	elif [ -e "${HOME}/.profile" ]; then
		PR="${HOME}/.profile"
	else
		PR="${HOME}/.bash_profile"
	fi
	;;
*sh)
	PR="${HOME}/.profile"
	;;
esac

# Create backup copy before patching
if [ -f "${PR}" ]; then
	cp -fp "${PR}" "${PR}.jrubysave"
fi
echo "" >> "${PR}"
echo "# Setting PATH for JRuby ${JRUBYVER}" >> "${PR}"
echo "# The orginal version is saved in `basename ${PR}`.jrubysave" >> "${PR}"
echo 'PATH="${PATH}:'"${JRUBY_CURRENT_PATH}/bin"'"' >> "${PR}"
echo 'export PATH' >> "${PR}"
if [ `id -ur` = 0 ]; then
	chown "${USER}" "${PR}"
fi
exit 0
