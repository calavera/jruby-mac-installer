#!/bin/sh

JRUBYVER="<%= JVERSION %>"
JRUBY_ROOT="<%= JRUBY_DEST %>/Versions"

JRUBY_VERSION_PATH="$JRUBY_ROOT/$JRUBYVER"
JRUBY_CURRENT_PATH="$JRUBY_ROOT/Current"

JRUBY_INSTALLER_LOG="$TMPDIR/jruby.uninstaller.log"
JRUBY_INSTALLER_ERR="$TMPDIR/jruby.uninstaller.err"

if [ ! -d $JRUBY_VERSION_PATH ]
then
    echo "seems JRuby version $JRUBYVER is not installed in $JRUBY_VERSION_PATH"
    exit
fi


#
# creates a backup of the installed version
#
BACKUP="$TMPDIR/jruby_unistaller_backup_$(date +%s)" 
mkdir $BACKUP
cp -r $JRUBY_VERSION_PATH $BACKUP

#
# gets the previously installed version
#
previous_version='1.5.0' # First version of the Mac installer
function compare(){
    echo "$1"
    echo "$2"
    
}

for version in `ls $JRUBY_ROOT`
do
    if [ "$version" = "$JRUBYVER" ]
    then
        break
    fi

    IFS="."; declare -a version_1=($previous_version)
    major_1=${version_1[0]}
    minor_1=${version_1[1]}
    patch_1=${version_1[2]}

    IFS="."; declare -a version_2=($version)
    major_2=${version_2[0]}
    minor_2=${version_2[1]}
    patch_2=${version_2[2]}

    if [ "$major_2" -gt "$major_1" ]
    then
        previous_version=$version
    else
        if [ "$major_2" -eq "$major_1" ] && [ "$minor_2" -gt "$minor_1" ]
        then
            previous_version=$version
        else
            if [ "$major_2" -eq "$major_1" ] && [ "$minor_2" -eq "$minor_1" ] && [ "$patch_2" -gt "$patch_1" ]
            then
                previous_version=$version
            fi
        fi
    fi
done

#
# removes the installed version
#
echo "removing $JRUBY_VERSION_PATH"
rm -r "$JRUBY_VERSION_PATH"
rm "$JRUBY_CURRENT_PATH"

if [ -d "$JRUBY_ROOT/$previous_version" ]
then
#
# links to the prevously installed version 
#
    ln -s "$JRUBY_ROOT/$previous_version" "$JRUBY_CURRENT_PATH"
else
#
# FIXME:  Remove Jruby from the path if there isn't a previous version
#
    echo "FIXME:  Remove Jruby from the path if there isn't a previous version"
fi

echo "JRuby uninstalled succesfully!"
